-- generated by wallust

vim.cmd "hi clear"
if vim.fn.exists "g:syntax_on" then
    vim.cmd "syntax reset"
end

local function hi(...)
    vim.api.nvim_set_hl(0, ...)
end

hi('ColorColumn', { bg = "{{ background | lighten(0.07) }}", ctermbg = 8 })
hi('Conceal', { fg = "{{ color4 }}", ctermfg = 4 })
hi('CurSearch', { fg = "{{ background }}", bg = "{{ color4 }}", ctermfg = 0, ctermbg = 4 })
hi('Cursor', { fg = "{{ background }}", bg = '{{ cursor }}' })
hi('CursorColumn', { bg = "{{ background | lighten(0.07) }}", ctermbg = 8 })
hi('CursorLineFold', { fg = "{{ color11 }}", bg = "NONE", ctermfg = 11, ctermbg = "NONE" })
hi('CursorLineNr', { fg = "{{ foreground }}", bg = "NONE", ctermfg = 15, ctermbg = "NONE", bold = true })
hi('CursorLine', { bg = "{{ background | lighten(0.07) }}", ctermbg = 0 })
hi('DiffAdd', { bg = "{{ color2 }}" })
hi('DiffChange', { bg = "{{ background | lighten(0.2) }}" })
hi('DiffDelete', { fg = "{{ color9 }}", bold = true })
hi('DiffText', { bg = "{{ color3 }}" })
hi('Directory', { fg = "{{ color12 }}", ctermfg = 12 })
hi('ErrorMsg', { fg = "{{ color1 }}", ctermfg = 1 })
hi('FloatBorder', { fg = "{{ color7 }}", bg = "{{ background }}" })
hi('FoldColumn', { fg = "{{ color0 }}", bg = "NONE", ctermfg = 8, ctermbg = "NONE" })
hi('Folded', { fg = "{{ color11 }}", bg = "NONE", ctermfg = 11, ctermbg = "NONE" })
hi('LineNr', { fg = "{{ color0 }}", bg = "NONE", ctermfg = 8, ctermbg = "NONE" })
hi('MatchParen', { fg = "{{ foreground }}", bg = "{{ background | lighten(0.3) }}", bold = true })
hi('MoreMsg', { fg = "{{ color2 }}", ctermfg = 2 })
hi('NonText', { fg = "{{ color0 }}", ctermfg = 8 })
hi('NormalFloat', { fg = "{{ foreground }}", bg = "{{ background }}", ctermfg = 15, ctermbg = 0 })
hi('Normal', { fg = "{{ foreground }}", bg = "NONE", ctermfg = 15, ctermbg = "NONE" })
hi('PMenuMatchSel', { fg = "{{ color14 }}", bg = "{{ background | lighten(0.2) }}", ctermfg = 14, ctermbg = 0 })
hi('PMenuMatch', { fg = "{{ color6 }}", ctermfg = 6 })
hi('PMenuSbar', { bg = "{{ background }}", ctermbg = 8 })
hi('PMenuSel', { bg = "{{ background | lighten(0.2) }}", ctermbg = 8 })
hi('PMenu', { fg = "{{ foreground }}", bg = "{{ background }}", ctermfg = 15, ctermbg = 0 })
hi('PMenuThumb', { bg = "{{ background | lighten(0.3) }}", ctermbg = 8 })
hi('Question', { fg = "{{ color4 }}", ctermfg = 4 })
hi('QuickFixLine', { fg = "{{ color6 }}" })
hi('Search', { fg = "{{ color0 }}", bg = "{{ color11 }}", ctermfg = 0, ctermbg = 11 })
hi('SignColumn', { fg = "{{ color0 }}", bg = "NONE", ctermfg = 8, ctermbg = "NONE" })
hi('SpecialKey', { fg = "{{ background | lighten(0.3) }}", ctermfg = 8 })
hi('WinSeparator', { fg = "{{ color0 }}", bg = "NONE", ctermfg = 8, ctermbg = "NONE" })
hi('EndOfBuffer', { link = "NonText" })
hi('CursorIM', { link = 'Cursor' })
hi('CursorLineSign', { link = 'SignColumn' })
hi('FloatFooter', { link = 'FloatTitle' })
hi('FloatTitle', { link = 'Title' })
hi('IncSearch', { link = 'CurSearch' })
hi('lCursor', { link = 'Cursor' })
hi('LineNrAbove', { link = 'LineNr' })
hi('LineNrBelow', { link = 'LineNr' })
hi('MsgArea', { link = 'None' })
hi('MsgSeparator', { link = 'WinSeparator' })
hi('NormalNC', { link = 'None' })
hi('PMenuExtra', { link = 'PMenu' })
hi('PMenuExtraSel', { link = 'PMenuSel' })
hi('PMenuKind', { link = 'PMenu' })
hi('PMenuKindSel', { link = 'PMenuSel' })
hi('SnippetTabstop', { link = 'Visual' })
hi('Substitute', { link = 'Search' })

hi('SpellBad', { sp = "{{ color9 }}", ctermfg = 0, ctermbg = 9, undercurl = true })
hi('SpellLocal', { sp = "{{ color10 }}", ctermfg = 0, ctermbg = 10, undercurl = true })
hi('SpellCap', { sp = "{{ color11 }}", ctermfg = 0, ctermbg = 11, undercurl = true })
hi('SpellRare', { sp = "{{ color12 }}", ctermfg = 0, ctermbg = 12, undercurl = true })

hi('StatusLine', { fg = "{{ foreground }}", bg = "{{ background | lighten(0.1) }}", ctermfg = 15, ctermbg = 8 })
hi('StatusLineNC', { fg = "{{ foreground }}", bg = "{{ background }}", ctermfg = 15, ctermbg = 0 })
hi('StatusLineTerm', { link = "StatusLine" })
hi('StatusLineTermNC', { link = "StatusLineNC" })

hi('TabLine', { link = "StatusLine" })
hi('TabLineFill', { link = "StatusLineNC" })
hi('TabLineSel', { fg = "{{ foreground }}", bg = "{{ color4 }}", ctermfg = 15, ctermbg = 4, bold = true })

hi('Title', { fg = "{{ color4 }}", ctermfg = 4, bold = true })
hi('Visual', { bg = "{{ background | lighten(0.1) }}", ctermbg = 8 })
hi('VisualNOS', { link = "Visual" })

hi('WarningMsg', { fg = "{{ color11 }}", ctermfg = 11 })
hi('WildMenu', { link = "PmenuSel" })

hi('WinBar', { link = "StatusLine" })
hi('WinBarNC', { link = "StatusLineNC" })

hi('Comment', { fg = "{{ foreground | darken(0.5) }}", italic = true })
hi('Constant', { fg = "{{ color11 }}", ctermfg = 11 })
hi('String', { fg = "{{ color2 }}", ctermfg = 2 })
hi('Character', { link = "String" })
hi('Number', { link = "Constant" })
hi('Boolean', { fg = "{{ color11 }}", ctermfg = 11, bold = true })
hi('Float', { link = "Number" })
hi('Identifier', { fg = "{{ color1 }}", ctermfg = 1 })
hi('Function', { fg = "{{ color4 }}", ctermfg = 4 })
hi('Statement', { fg = "{{ color5 }}", ctermfg = 5, bold = true })
hi('Conditional', { link = "Statement" })
hi('Repeat', { link = "Statement" })
hi('Label', { link = "Statement" })

hi('Operator', { fg = "{{ color6 }}", ctermfg = 6 })
hi('Keyword', { link = "Statement" })
hi('Exception', { fg = "{{ color5 }}", ctermfg = 5, bold = true })

hi('PreProc', { fg = "{{ color13 }}", ctermfg = 13, italic = true })
hi('Include', { link = "PreProc" })
hi('Define', { link = "PreProc" })
hi('Macro', { link = "PreProc" })
hi('PreCondit', { link = "PreProc" })

hi('Type', { fg = "{{ color3 }}", ctermfg = 3, italic = true })
hi('StorageClass', { fg = "{{ color6 }}", ctermfg = 6 })
hi('Structure', { fg = "{{ color1 | blend(color3) }}", ctermfg = 3 })
hi('Typedef', { link = "Type" })

hi('Special', { fg = "{{ color6 }}", ctermfg = 6 })
hi('SpecialChar', { fg = "{{ color3 }}", ctermfg = 3 })
hi('Tag', { fg = "{{ color5 }}", ctermfg = 5, underline = true })
hi('Delimiter', { fg = "{{ foreground }}", ctermfg = 15 })
hi('SpecialComment', { fg = "{{ color3 }}", ctermfg = 3, italic = true })
hi('Debug', { fg = "{{ color1 }}", ctermfg = 1 })
hi('Underlined', { underline = true })

hi('Error', { fg = "{{ color1 }}", ctermfg = 1, bold = true })

hi('Todo', { fg = "{{ color6 }}", ctermfg = 6, bold = true })

hi('Added', { fg = "{{ color10 }}", ctermfg = 10, italic = true })
hi('Changed', { fg = "{{ color12 }}", ctermfg = 12, italic = true })
hi('Removed', { fg = "{{ color11 }}", ctermfg = 11, italic = true })

hi('@keyword.import.c', { link = "Include" })
hi('@keyword.import.cpp', { link = "Include" })

hi('@variable', { link = "Identifier" })
hi('@variable.builtin', { fg = "{{ color13 }}", ctermfg = 13, italic = true })
hi('@variable.parameter', { link = "Identifier" })
hi('@variable.parameter.builtin', { link = "@variable.builtin" })
hi('@variable.member', { fg = "{{ color1 }}", ctermfg = 1 })

hi('@constant', { link = "Constant" })
hi('@constant.builtin', { fg = "{{ color11 }}", ctermfg = 11, italic = true })
hi('@constant.macro', { link = "Constant" })

hi('@module', { link = "Identifier" })
hi('@module.builtin', { fg = "{{ color3 }}", ctermfg = 3, italic = true })
hi('@label', { link = "Tag" })

hi('@string', { link = "String" })
hi('@string.documentation', { link = "String" })
hi('@string.regexp', { link = "SpecialComment" })
hi('@string.escape', { link = "SpecialComment" })
hi('@string.special', { link = "SpecialComment" })
hi('@string.special.symbol', { link = "SpecialComment" })

hi('@string.special.path', { link = "Directory" })
hi('@string.special.url', { fg = "{{ color9 }}", ctermfg = 9, italic = true, underline = true })

hi('@character', { link = "Character" })
hi('@character.special', { link = "SpecialChar" })

hi('@boolean', { link = "Boolean" })
hi('@number', { link = "Number" })
hi('@number.float', { link = "Float" })

hi('@type', { link = "Type" })
hi('@type.builtin', { fg = "{{ color3 }}", ctermfg = 3, italic = true })
hi('@type.definition', { link = "Typedef" })

hi('@attribute', { link = "Special" })
hi('@attribute.builtin', { fg = "{{ color6 }}", ctermfg = 6, italic = true })
hi('@property', { link = "@variable.member" })

hi('@function', { link = "Function" })
hi('@function.builtin', { fg = "{{ color4 }}", ctermfg = 4, italic = true })
hi('@function.call', { link = "Function" })
hi('@function.macro', { link = "Macro" })
hi('@function.method', { link = "Function" })
hi('@function.method.call', { link = "@function.method" })

hi('@constructor', { fg = "{{ color4 }}", ctermfg = 4, bold = true })

hi('@operator', { link = "Operator" })

hi('@keyword', { link = "Keyword" })
hi('@keyword.coroutine', { link = "Repeat" })
hi('@keyword.function', { link = "Keyword" })
hi('@keyword.operator', { link = "Operator" })
hi('@keyword.import', { fg = "{{ color5 }}", ctermfg = 5, italic = true })
hi('@keyword.type', { link = "Structure" })
hi('@keyword.modifier', { link = "StorageClass" })
hi('@keyword.repeat', { link = "Repeat" })
hi('@keyword.return', { link = "Keyword" })
hi('@keyword.debug', { link = "Debug" })
hi('@keyword.exception', { link = "Exception" })

hi('@keyword.conditional', { link = "Conditional" })
hi('@keyword.conditional.ternary', { link = "Conditional" })

hi('@keyword.directive', { link = "PreProc" })
hi('@keyword.directive.define', { link = "Define" })

hi('@punctuation.delimiter', { link = "Delimiter" })
hi('@punctuation.bracket', { link = "Delimiter" })
hi('@punctuation.special', { link = "Special" })

hi('@comment', { link = "Comment" })
hi('@comment.documentation', { link = "Comment" })

hi('@comment.error', { fg = "{{ color9 }}", ctermfg = 9, bold = true, italic = true })
hi('@comment.warning', { fg = "{{ color11 }}", ctermfg = 11, bold = true, italic = true })
hi('@comment.todo', { fg = "{{ color8 }}", ctermfg = 8, bold = true, italic = true })
hi('@comment.note', { fg = "{{ color14 }}", ctermfg = 14, bold = true, italic = true })

hi('@markup.heading', { link = "Title" })
hi('@markup.quote', { link = "String" })
hi('@markup.math', { link = "Special" })

hi('@markup.link', { fg = "{{ color8 }}", ctermfg = 8 })
hi('@markup.link.label', { fg = "{{ color1 }}", ctermfg = 1, underline = true })
hi('@markup.link.url', { link = "@string.special.url" })

hi('@markup.raw', { fg = "{{ foreground | darken(0.4) }}", ctermfg = 15 })
hi('@markup.raw.block', { link = "@markup.raw" })

hi('@markup.list', { link = "SpecialChar" })
hi('@markup.list.checked', { link = "DiagnosticOk" })
hi('@markup.list.unchecked', { link = "DiagnosticError" })

hi('@diff.plus', { link = "Added" })
hi('@diff.minus', { link = "Removed" })
hi('@diff.delta', { link = "Changed" })

hi('@tag', { link = "Tag" })
hi('@tag.builtin', { fg = "{{ color9 }}", ctermfg = 9, italic = true })
hi('@tag.attribute', { link = "Special" })
hi('@tag.delimiter', { link = "Delimiter" })

hi('@lsp.type.class', { link = "@type" })
hi('@lsp.type.comment', { link = "@comment" })
hi('@lsp.type.decorator', { link = "@attribute" })
hi('@lsp.type.enum', { link = "@type" })
hi('@lsp.type.enumMember', { link = "@constant" })
hi('@lsp.type.event', { link = "@type" })
hi('@lsp.type.function', { link = "@function" })
hi('@lsp.type.interface', { link = "@type" })
hi('@lsp.type.keyword', { link = "@keyword" })
hi('@lsp.type.macro', { link = "@function.macro" })
hi('@lsp.type.method', { link = "@function.method" })
hi('@lsp.type.modifier', { link = "@type.modifier" })
hi('@lsp.type.namespace', { link = "@module" })
hi('@lsp.type.number', { link = "@number" })
hi('@lsp.type.operator', { link = "@operator" })
hi('@lsp.type.parameter', { link = "@variable.parameter" })
hi('@lsp.type.property', { link = "@property" })
hi('@lsp.type.regexp', { link = "@string.regexp" })
hi('@lsp.type.string', { link = "@string" })
hi('@lsp.type.struct', { link = "@type" })
hi('@lsp.type.type', { link = "@type" })
hi('@lsp.type.typeParameter', { link = "@variable.parameter" })
hi('@lsp.type.variable', { link = "@variable" })

hi('LspReferenceText', { link = "Search" })
hi('LspReferenceRead', { fg = "{{ background | lighten(0.1) }}", bg = "{{ color10 }}" })
hi('LspReferenceWrite', { fg = "{{ background | lighten(0.1) }}", bg = "{{ color9 }}" })

hi('DiagnosticError', { fg = "{{ color1 }}", ctermfg = 1 })
hi('DiagnosticWarn', { fg = "{{ color3 }}", ctermfg = 3 })
hi('DiagnosticInfo', { fg = "{{ color6 }}", ctermfg = 6 })
hi('DiagnosticHint', { fg = "{{ color4 }}", ctermfg = 4 })
hi('DiagnosticOk', { fg = "{{ color2 }}", ctermfg = 2 })

hi('DiagnosticUnderlineError', { sp = "{{ color1 }}", ctermfg = 0, ctermbg = 1, underline = true })
hi('DiagnosticUnderlineWarn', { sp = "{{ color3 }}", ctermfg = 0, ctermbg = 3, underline = true })
hi('DiagnosticUnderlineInfo', { sp = "{{ color6 }}", ctermfg = 0, ctermbg = 6, underline = true })
hi('DiagnosticUnderlineHint', { sp = "{{ color4 }}", ctermfg = 0, ctermbg = 4, underline = true })
hi('DiagnosticUnderlineOk', { sp = "{{ color2 }}", ctermfg = 0, ctermbg = 2, underline = true })

hi('DiagnosticFloatingError', { fg = "{{ color1 }}", bg = "{{ background }}", ctermfg = 1, ctermbg = 0 })
hi('DiagnosticFloatingWarn', { fg = "{{ color3 }}", bg = "{{ background }}", ctermfg = 3, ctermbg = 0 })
hi('DiagnosticFloatingInfo', { fg = "{{ color6 }}", bg = "{{ background }}", ctermfg = 6, ctermbg = 0 })
hi('DiagnosticFloatingHint', { fg = "{{ color4 }}", bg = "{{ background }}", ctermfg = 4, ctermbg = 0 })
hi('DiagnosticFloatingOk', { fg = "{{ color2 }}", bg = "{{ background }}", ctermfg = 2, ctermbg = 0 })

hi('DiagnosticDeprecated', { fg = "{{ foreground | darken(0.45) }}", strikethrough = true })

hi('MiniIconsAzure', { fg = "{{ color10 | blend(color12) | blend(color12) }}", ctermfg = 12 })
hi('MiniIconsBlue', { fg = "{{ color12 }}", ctermfg = 12 })
hi('MiniIconsCyan', { fg = "{{ color14 }}", ctermfg = 14 })
hi('MiniIconsGreen', { fg = "{{ color10 }}", ctermfg = 10 })
hi('MiniIconsGrey', { fg = "{{ foreground | darken(0.5) }}", ctermfg = 8 })
hi('MiniIconsOrange', { fg = "{{ color9 | blend(color11) }}", ctermfg = 11 })
hi('MiniIconsPurple', { fg = "{{ color13 }}", ctermfg = 13 })
hi('MiniIconsRed', { fg = "{{ color9 }}", ctermfg = 9 })
hi('MiniIconsYellow', { fg = "{{ color11 }}", ctermfg = 11 })

hi('MiniStatuslineModeNormal', { fg = "{{ background }}", bg = "{{ cursor }}", bold = true })
hi('MiniStatuslineModeInsert', { fg = "{{ background }}", bg = "{{ color10 }}", bold = true })
hi('MiniStatuslineModeVisual', { fg = "{{ background }}", bg = "{{ color13 }}", bold = true })
hi('MiniStatuslineModeReplace', { fg = "{{ background }}", bg = "{{ color9 }}", bold = true })
hi('MiniStatuslineModeCommand', { fg = "{{ background }}", bg = "{{ color14 }}", bold = true })
hi('MiniStatuslineModeOther', { fg = "{{ background }}", bg = "{{ color8 }}", bold = true })

hi('MiniIndentscopeSymbol', { fg = "{{ background | blend(color14) | blend(color14) }}" })
